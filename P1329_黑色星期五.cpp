#include <iostream>
using namespace std;

long long n,moth[]={31,28,31,30,31,30,31,31,30,31,30,31},ans,i;
int main(){
    while(cin>>n){
        //先输出该年年份
        cout<<n<<" ";
        //判断n是否为闰年，如果是，则令moth[1]=29
        if(n%4==0&&(n%400==0||n%100!=0))moth[1]=29;
        else moth[1]=28;
        //下面的n被重新赋值为从2016/1/1到n/1/1的天数%7
        //下面的算式可以计算从2016/1/1到n/1/1的天数%7
        //((n-2016)*365+(n-2016)/4-(n-2000)/100+(n-2000)/400) 是计算2017年到n年的天数之和。即[2017,n]的天数
        //+366 是把2016年的天数加上
        //-(moth[1]==28?365:366) 是把第n年的天数去掉，第n年的二月天数如果是28天就是平年，否则是闰年。
        //此时(((n-2016)*365+(n-2016)/4-(n-2000)/100+(n-2000)/400)+366-(moth[1]==28?365:366))就是从2016/1/1到n/1/1的天数
        //再对天数%7，计算出n/1/1的星期数相对于周五的偏移
        n = (((n-2016)*365+(n-2016)/4-(n-2000)/100+(n-2000)/400)+366-(moth[1]==28?365:366))%7;
        for(i=ans=0;i<12;i++){
            //计算每个月第一天加12的偏移量是否为7的倍数。（如果是，则表明这一天为周五）
            if((n+12)%7==0)ans++;   
            //把n加上这一个月的天数
            n+=moth[i];
        }
        //输出答案
        cout<<ans<<endl;
    }
    return 0;
}